<?xml version="1.0" encoding="iso-8859-1"?>

<!-- 
  Please see the license.html file included with this distribution for 
  attribution and copyright information.
-->

<root>
	<template name="number_chartotal">
		<number_modifier_framed>
			<showemptywidget />
		</number_modifier_framed>
	</template>

	<template name="cycler_ability">
		<button_stringcycler>
			<parameters>
				<defaultlabelres mergerule="replace">dash</defaultlabelres>
				<labelsres>str|dex|con|int|wis|cha</labelsres>
				<values>strength|dexterity|constitution|intelligence|wisdom|charisma</values>
			</parameters>
		</button_stringcycler>
	</template>
	<template name="cycler_abilitybase">
		<cycler_ability>
			<parameters>
				<defaultlabelres mergerule="replace">base</defaultlabelres>
			</parameters>
		</cycler_ability>
	</template>

	<template name="button_iadd_recordtype">
		<button_iadd_base>
			<script>
				function onButtonPress()
					RecordManager.openRecordIndex(recordtype[1])
				end
			</script>
		</button_iadd_base>
	</template>
	<template name="number_charlevel">
		<number_static>
			<script>
				function onInit()
					self.update();
					local node = window.getDatabaseNode();
					DB.addHandler(DB.getPath(node, "classes.*.level"), "onUpdate", self.update);
					DB.addHandler(DB.getPath(node, "classes"), "onChildDeleted", self.update);
				end
				function onClose()
					local node = window.getDatabaseNode();
					DB.removeHandler(DB.getPath(node, "classes.*.level"), "onUpdate", self.update);
					DB.removeHandler(DB.getPath(node, "classes"), "onChildDeleted", self.update);
				end
				function update()
					local nLevel = 0;
					for _,v in ipairs(DB.getChildList(window.getDatabaseNode(), "classes")) do
						nLevel = nLevel + DB.getValue(v, "level", 0);
					end
					setValue(nLevel);
				end
			</script>
		</number_static>
	</template>
	<template name="stringc_charclasslevel">
		<stringcu>
			<anchored height="20" />
			<readonly />
			<script>
				function onInit()
					update();
					DB.addHandler(DB.getPath(window.getDatabaseNode(), "classes"), "onChildUpdate", update);
				end
				function onClose()
					DB.removeHandler(DB.getPath(window.getDatabaseNode(), "classes"), "onChildUpdate", update);
				end
				function update()
					setValue(CharManager.getClassSummary(window.getDatabaseNode()));
				end
				function onClickDown(button, x, y)
					return true;
				end
				function onClickRelease(button, x, y)
					Interface.openWindow("charsheet_classes", window.getDatabaseNode());
				end
			</script>
		</stringcu>
	</template>
	<template name="button_charclasslevel">
		<button_details>
			<script>
				function onButtonPress()
					Interface.openWindow("charsheet_classes", window.getDatabaseNode());
				end
			</script>
		</button_details>
	</template>
	<template name="number_charabilityscore">
		<number_abilityscore>
			<anchored to="statstitle" width="40" height="30">
				<top anchor="bottom" relation="relative" offset="18" />
				<left anchor="center" offset="-30" />
			</anchored>
		</number_abilityscore>
	</template>
	<template name="button_charabilitycheck">
		<button_roll_light>
			<anchored position="righthigh" offset="5,5" width="20" height="20" />
			<tooltip textres="char_label_check_roll" />
			<script>
				function onDragStart(button, x, y, draginfo)
					return WindowManager.callOuterWindowFunction(window, "onCheckAction", draginfo, self.target[1]);
				end
				function onButtonPress()
					return WindowManager.callOuterWindowFunction(window, "onCheckAction", nil, self.target[1]);
				end
			</script>
		</button_roll_light>
	</template>
	<template name="label_chardefense">
		<label_fieldtop>
			<anchored offset="-4,-6" />
			<frame name="abilityscore" />
			<font>sheetlabelmini</font>
		</label_fieldtop>
	</template>
	<template name="number_charabilitysave">
		<number_chartotal>
			<anchored to="savestitle" width="40" height="30">
				<top anchor="bottom" relation="relative" offset="18" />
				<left anchor="center" offset="-30" />
			</anchored>
			<displaysign />
			<script>
				function onInit()
					self.addSourceWithOp("abilities." .. target[1] .. ".bonus", "+");
					self.addSource("abilities." .. target[1] .. ".saveprof");
					self.addSource("profbonus");
					super.onInit();
				end
				function onSourceUpdate()
					local nValue = self.calculateSources();
					local node = window.getDatabaseNode();
					if DB.getValue(node, "abilities." .. target[1] .. ".saveprof", 0) == 1 then
						nValue = nValue + DB.getValue(node, "profbonus", 2);
					end
					setValue(nValue);
				end
				function onDragStart(button, x, y, draginfo)
					return WindowManager.callOuterWindowFunction(window, "onSaveAction", draginfo, self.target[1]);
				end
			</script>
		</number_chartotal>
	</template>
	<template name="button_charabilitysave">
		<button_roll_light>
			<anchored position="righthigh" offset="5,5" width="20" height="20" />
			<tooltip textres="char_label_save_roll" />
			<script>
				function onDragStart(button, x, y, draginfo)
					return WindowManager.callOuterWindowFunction(window, "onSaveAction", draginfo, self.target[1]);
				end
				function onButtonPress()
					return WindowManager.callOuterWindowFunction(window, "onSaveAction", nil, self.target[1]);
				end
			</script>
		</button_roll_light>
	</template>
	<template name="button_charcombatcalc">
		<button_details>
			<script>
				function onButtonPress()
					Interface.openWindow("charsheet_combatcalc", window.getDatabaseNode());
				end
			</script>
		</button_details>
	</template>
	<template name="number_charmain_skill_passive">
		<number_chartotal>
			<anchored width="30" height="20" />
			<script>
				local nodeSkill = nil;

				function onInit()
					local nodeChar = window.getDatabaseNode();
					local sSkill = Interface.getString(skill[1]);

					for _,vSkill in ipairs(DB.getChildList(nodeChar, "skilllist")) do
						if DB.getValue(vSkill, "name", "") == sSkill then
							nodeSkill = vSkill;
						end
					end
					if not nodeSkill and DataCommon.skilldata[sSkill] then
						local t = DataCommon.skilldata[sSkill];
						local nodeSkillList = DB.createChild(nodeChar, "skilllist");
						nodeSkill = DB.createChild(nodeSkillList);

						DB.setValue(nodeSkill, "name", "string", sSkill);
						DB.setValue(nodeSkill, "stat", "string", t.stat or "");
					end

					if nodeSkill then
						DB.addHandler(DB.getPath(nodeChar, "abilities.*.score"), "onUpdate", onSourceUpdate);
						DB.addHandler(DB.getPath(nodeChar, "profbonus"), "onUpdate", onSourceUpdate);
						DB.addHandler(nodeSkill, "onChildUpdate", onSourceUpdate);
						super.hasSources = true;
					end

					super.onInit();
				end

				function onClose()
					if nodeSkill then
						local nodeChar = window.getDatabaseNode();
						DB.removeHandler(DB.getPath(nodeChar, "abilities.*.score"), "onUpdate", onSourceUpdate);
						DB.removeHandler(DB.getPath(nodeChar, "profbonus"), "onUpdate", onSourceUpdate);
						DB.removeHandler(nodeSkill, "onChildUpdate", onSourceUpdate);
					end
				end

				function onSourceUpdate()
					local nValue = 10 + calculateSources() + DB.getValue(nodeSkill, "misc", 0);

					local nodeChar = window.getDatabaseNode();

					local sAbility = DB.getValue(nodeSkill, "stat", "");
					if sAbility ~= "" then
						local nScore = DB.getValue(nodeChar, "abilities." .. sAbility .. ".score", 0)
						nValue = nValue + math.floor((nScore - 10) / 2);
					end

					local nProf = DB.getValue(nodeSkill, "prof", 0);
					if nProf == 1 then
						nValue = nValue + DB.getValue(nodeChar, "profbonus", 2);
					elseif nProf == 2 then
						nValue = nValue + (2 * DB.getValue(nodeChar, "profbonus", 2));
					elseif nProf == 3 then
						nValue = nValue + math.floor(DB.getValue(nodeChar, "profbonus", 2) / 2);
					end

					setValue(nValue);
				end
			</script>
		</number_chartotal>
	</template>
	<template name="button_charhealthcalc">
		<button_details>
			<script>
				function onButtonPress()
					Interface.openWindow("charsheet_healthcalc", window.getDatabaseNode());
				end
			</script>
		</button_details>
	</template>

	<template name="button_prof">
		<buttonfield>
			<state icon="button_prof" tooltipres="char_tooltip_prof_off" />
			<state icon="button_prof_down" tooltipres="char_tooltip_prof_on" />
		</buttonfield>
	</template>
	<template name="button_initprof">
		<button_prof>
			<anchored position="insidebottomright" offset="-7,-5" width="12" height="12" />
		</button_prof>
	</template>
	<template name="button_saveprof">
		<button_prof>
			<anchored position="insidebottomright" offset="-6,-2" width="12" height="12" />
		</button_prof>
	</template>
	<template name="button_armorprof">
		<button_prof>
			<anchored position="insidebottomright" offset="-4,0" width="12" height="12" />
			<default>1</default>
		</button_prof>
	</template>

	<template name="number_chartotalac">
		<number_chartotal>
			<description textres="armorclass" />
			<font>reference-b-large</font>
			<modifierfield>defenses.ac.temporary</modifierfield>
			<source><name>defenses.ac.armor</name><op>+</op></source>
			<source><name>defenses.ac.shield</name><op>+</op></source>
			<source><name>defenses.ac.misc</name><op>+</op></source>
			<source><string /><name>defenses.ac.dexbonus</name></source>
			<source><string /><name>defenses.ac.stat2</name></source>
			<script>
				function onInit()
					super.onInit();
					DB.addHandler(DB.getPath(window.getDatabaseNode(), "abilities"), "onChildUpdate", onSourceUpdate);
				end

				function onClose()
					DB.removeHandler(DB.getPath(window.getDatabaseNode(), "abilities"), "onChildUpdate", onSourceUpdate);
				end

				function onSourceUpdate()
					local rActor = ActorManager.resolveActor(window.getDatabaseNode());

					local nDexBonus = ActorManager5E.getAbilityBonus(rActor, "dexterity");
					local sDexBonus = self.getSourceValue("defenses.ac.dexbonus");
					if sDexBonus == "max2" then
						nDexBonus = math.min(nDexBonus, 2);
					elseif sDexBonus == "max3" then
						nDexBonus = math.min(nDexBonus, 3);
					elseif sDexBonus == "no" then
						nDexBonus = 0;
					end

					local nStatBonus2 = 0;
					local sStat2 = self.getSourceValue("defenses.ac.stat2");
					if sStat2 ~= "" then
						nStatBonus2 = ActorManager5E.getAbilityBonus(rActor, sStat2);
					end

					setValue(10 + calculateSources() + nDexBonus + nStatBonus2);
				end
			</script>
		</number_chartotal>
	</template>
	<template name="number_charwounds">
		<basicnumber>
			<min value="0" />
			<hideonvalue value="0" />
			<script>
				function onInit()
					if super.onInit then
						super.onInit();
					end

					OptionsManager.registerCallback("WNDC", onValueChanged);
					onValueChanged();
				end

				function onClose()
					OptionsManager.unregisterCallback("WNDC", onValueChanged);
				end

				function onDrop(x, y, draginfo)
					if draginfo.getType() == "number" then
						local rActor = ActorManager.resolveActor(window.getDatabaseNode());
						local rRoll = { sDesc = draginfo.getDescription(), nTotal = draginfo.getNumberData() };
						ActionDamage.applyDamage(nil, rActor, rRoll);
					end
					return true;
				end

				function onValueChanged()
					if window.onHealthChanged then
						window.onHealthChanged();
					end
				end
			</script>
		</basicnumber>
	</template>
	<template name="number_charinit">
		<number_chartotal>
			<font>reference-b-large</font>
			<displaysign />
			<modifierfield>initiative.temporary</modifierfield>
			<source><name>initiative.misc</name><op>+</op></source>
			<source><name>abilities.dexterity.bonus</name><op>+</op></source>
			<script>
				function onInit()
					self.addSource("initiative.prof");
					super.onInit();
				end
				function onSourceUpdate()
					local nValue = self.calculateSources();
					local node = window.getDatabaseNode();
					if DB.getValue(node, "initiative.prof", 0) == 1 then
						nValue = nValue + DB.getValue(node, "profbonus", 2);
					end
					setValue(nValue);
				end
				function onDragStart(button, x, y, draginfo)
					return WindowManager.callOuterWindowFunction(window, "onInitAction", draginfo);
				end
			</script>
		</number_chartotal>
	</template>
	<template name="number_charspeed">
		<number_chartotal>
			<font>reference-b-large</font>
			<modifierfield>speed.temporary</modifierfield>
			<description textres="char_tooltip_speed" />
			<source><name>speed.base</name><op>+</op></source>
			<source><name>speed.armor</name><op>+</op></source>
			<source><name>speed.misc</name><op>+</op></source>
		</number_chartotal>
	</template>

	<template name="number_charskill">
		<number_listitem_right>
			<anchored width="40" />
			<delaykeyupdate />
			<hideonvalue>0</hideonvalue>
			<nodrag />
			<displaysign />
		</number_listitem_right>
	</template>
	<template name="number_charskilltotal">
		<number_listitem_linked_right>
			<anchored width="40" />
			<displaysign />
			<nodrag />
			<script file="campaign/scripts/char_skill_total.lua" />
		</number_listitem_linked_right>
	</template>
	<template name="button_skillprof">
		<button_listitem_left>
			<state icon="button_prof" tooltipres="char_tooltip_prof_off" merge="add" />
			<state icon="button_prof_down" tooltipres="char_tooltip_prof_on" merge="add" />
			<state icon="button_prof_double" tooltipres="char_tooltip_prof_double" merge="add" />
			<state icon="button_prof_half" tooltipres="char_tooltip_prof_half" merge="add" />
		</button_listitem_left>
	</template>
	<template name="cycler_charskillability">
		<stringcycler_listitem_right name="stat">
			<anchored width="30" />
			<parameters>
				<defaultlabelres mergerule="replace">dash</defaultlabelres>
				<labelsres>str|dex|con|int|wis|cha</labelsres>
				<values>strength|dexterity|constitution|intelligence|wisdom|charisma</values>
			</parameters>
		</stringcycler_listitem_right>
	</template>

	<template name="string_charinv_attunecalc">
		<stringcontrol>
			<font>subwindowsmalltitle</font>
			<warning>FF2020</warning>
		</stringcontrol>
	</template>

	<template name="state_charweapontype">
		<buttonfield>
			<anchored width="30" height="30" />
			<state icon="char_weapon_melee" tooltipres="char_tooltip_weapontypemelee" />
			<state icon="char_weapon_ranged" tooltipres="char_tooltip_weapontyperanged" />
			<state icon="char_weapon_thrown" tooltipres="char_tooltip_weapontypethrown" />
		</buttonfield>
	</template>
	<template name="state_charweaponhand">
		<buttonfield>
			<anchored width="30" height="30" />
			<state icon="char_weapon_hand1" tooltipres="char_tooltip_weaponhand1" />
			<state icon="char_weapon_hand2" tooltipres="char_tooltip_weaponhand2" />
			<state icon="char_weapon_handoff" tooltipres="char_tooltip_weaponhandoff" />
		</buttonfield>
	</template>
	<template name="state_charammocounter">
		<buttongroup_counter>
			<sourcefields>
				<maximum>maxammo</maximum>
				<current>ammo</current>
			</sourcefields>
		</buttongroup_counter>
	</template>
</root>
